# Index
- Zu viele Attribute im Index. Warum?
  -> Weil nicht gefiltert wird. Zu indizierende Attribute vorher ermitteln.
- Was passiert wenn z.B. eine Gruppenmitgliedschaft hinzugefügt wird?
- Event bei vollständigem Index-Lauf / Aktualisierung senden

# Rückwärtsbeziehungen zu Objektdefinitionen erlauben
- Wird ein Plugin installiert, welches z.B. Benutzer erweitert, so sollte es die
  Objektdefinitionen dazu selbst mitbringen und ein Verweiss auf "extends" des Benutzers
  enthalten, ohne dass die Benutzerdefinition selbst angefasst werden muss.

# Backend TODOs
- Workflows upload
- LDAP Umbau von pyldap nach ldap3 möglich?

# Transport Security
- HTTPS Verbindungen per default
- HSTS aktivieren

# Login
- U2F support einbauen
- Passwort in JS Sitzung?

# Plugins
- PWDPolicy Extension hinzufügen
- GOfax
- Zarafa

# GUI improvements
- Gravatar Import bei Benutzerbildern anbieten
- Workflows einbauen
- Objektanlage hinzufügen
- Capture rewrite bzgl. aktueller Technik
- RPC-Locked sollte nicht in ein "nicht genügend Berechtigungen" resultieren, sondern den Fehler holen und anzeigen
- Objekt-Aktualisieren falls es momentan geöffnet ist und eine Modifikation vom Backend gemeldet wurde
- Bei Index-Aktualisierung eventuell offene Suche wiederholen
- Suche wiederholen wenn ein betroffenes Objekt modifiziert wurde?

# Filter (gosa.backend.objects.filter + gosa.backend.plugins.*filter)
- Konstruktor wird ein Object übergeben, dieses wird zwar dem Parent-Konstruktor übergeben, welcher wiederum nichts damit macht
- auch der erste Parameter in der process Methode wird nicht genutzt

# gosa.backend.object.(comparator|types).(acl_set|acl_roles)
- Code nahezu identisch, nur das bei den sets auch der 'members'-key im Dict berücksichtigt wird => prüfen ob man das vereinheitlichen kann
