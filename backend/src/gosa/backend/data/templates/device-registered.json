{
    "type": "widget",
    "class": "qx.ui.container.Composite",
    "layout": "qx.ui.layout.VBox",
    "addOptions": {
        "flex": 1
    },
    "layoutConfig": {
        "spacing": "CONST_SPACING_Y"
    },
    "extensions": {
        "resources": {
            "favicon": "@Ligature/pc",
            "actionConfigureClient": "@Ligature/gear"
        },
        "tabConfig": {
            "title": "tr('Registered device')",
            "icon": "favicon"
        },
        "actions": [
            {
                "name": "configureClient",
                "target": "configureClient()",
                "icon": "actionConfigureClient",
                "text": "tr('Configure client')",
                "condition": "status_Online"
            }
        ]
    },
    "children": [{
        "class": "gosa.ui.widgets.GroupBox",
        "layout": "qx.ui.layout.Grid",
        "properties": {
            "legend": "tr('Generic')"
        },
        "layoutConfig": {
            "spacingX": "CONST_SPACING_X",
            "spacingY": "CONST_SPACING_Y"
        },
        "extensions": {
            "layoutOptions": {
                "columnFlex": {
                    "column": [1, 3],
                    "flex": 1
                }
            }
        },
        "children": [{
            "class": "gosa.ui.widgets.QLabelWidget",
            "buddyModelPath": "deviceUUID",
            "properties": {
                "text": "tr('Device UUID')",
                "toolTipText": "tr('This attribute keeps a unique identifier for a device that should be registered to the GOsa services. It is used as a unique key to find the relationship of the registered device to other information like inventory, received events and logging data.')"
            },
            "addOptions": {
                "row": 0,
                "column": 0
            }
        }, {
            "class": "gosa.ui.widgets.QLineEditWidget",
            "modelPath": "deviceUUID",
            "properties": {
                "toolTipText": "tr('This attribute keeps a unique identifier for a device that should be registered to the GOsa services. It is used as a unique key to find the relationship of the registered device to other information like inventory, received events and logging data.')"
            },
            "addOptions": {
                "row": 0,
                "column": 1
            }
        }, {
            "class": "gosa.ui.widgets.QLabelWidget",
            "buddyModelPath": "deviceKey",
            "properties": {
                "text": "tr('Device key')",
                "toolTipText": "tr('This attribute keeps the encrypted (initial) device secret')"
            },
            "addOptions": {
                "row": 1,
                "column": 0
            }
        }, {
            "class": "gosa.ui.widgets.QLineEditWidget",
            "modelPath": "deviceKey",
            "properties": {
                "toolTipText": "tr('This attribute keeps the encrypted (initial) device secret')"
            },
            "addOptions": {
                "row": 1,
                "column": 1
            }
        }, {
            "class": "gosa.ui.widgets.QLabelWidget",
            "buddyModelPath": "deviceStatus",
            "properties": {
                "text": "tr('Device status')",
                "toolTipText": "tr('The deviceStatus attribute represents several states a system can represent. Note that this is the current status - i.e. no history of states is recordable this way. The attribute is mostly used to quickly determine the state without reading system logs. ')"
            },
            "addOptions": {
                "row": 2,
                "column": 0
            }
        }, {
            "class": "gosa.ui.widgets.QLineEditWidget",
            "modelPath": "deviceStatus",
            "properties": {
                "toolTipText": "tr('The deviceStatus attribute represents several states a system can represent. Note that this is the current status - i.e. no history of states is recordable this way. The attribute is mostly used to quickly determine the state without reading system logs. ')"
            },
            "addOptions": {
                "row": 2,
                "column": 1,
                "colSpan": 3
            }
        }, {
            "class": "gosa.ui.widgets.QLabelWidget",
            "buddyModelPath": "deviceType",
            "properties": {
                "text": "tr('Device type')",
                "toolTipText": "tr('To order systems, you can mark a system i.e. as a server')"
            },
            "addOptions": {
                "row": 0,
                "column": 2
            }
        }, {
            "class": "gosa.ui.widgets.QComboBoxWidget",
            "modelPath": "deviceType",
            "properties": {
                "toolTipText": "tr('To order systems, you can mark a system i.e. as a server')",
                "sortBy": "value"
            },
            "addOptions": {
                "row": 0,
                "column": 3
            }
        }, {
            "class": "gosa.ui.widgets.QLabelWidget",
            "buddyModelPath": "manager",
            "properties": {
                "text": "tr('DN of manager')"
            },
            "addOptions": {
                "row": 1,
                "column": 2
            }
        }, {
            "class": "gosa.ui.widgets.QTableWidgetWidget",
            "modelPath": "manager",
            "addOptions": {
                "row": 1,
                "column": 3
            },
            "extensions": {
                "guiProperties": {
                    "editTitle": "tr('Choose a manager')",
                    "columns": {
                        "cn": "tr('Name')",
                        "uid": "tr('Login ID')"
                    }
                }
            }
        }]
    }, {
        "class": "gosa.ui.widgets.GroupBox",
        "layout": "qx.ui.layout.Grid",
        "properties": {
            "legend": "tr('States')"
        },
        "layoutConfig": {
            "spacingX": "CONST_SPACING_X",
            "spacingY": "CONST_SPACING_Y"
        },
        "extensions": {
            "layoutOptions": {
                "columnFlex": {
                    "column":[0, 1],
                    "flex": 1
                }
            }
        },
        "children": [{
            "class": "gosa.ui.widgets.QCheckBoxWidget",
            "modelPath": "status_Error",
            "properties": {
                "label": "tr('Error')"
            },
            "addOptions": {
                "row": 0,
                "column": 0
            }
        }, {
            "class": "gosa.ui.widgets.QCheckBoxWidget",
            "modelPath": "status_Warning",
            "properties": {
                "label": "tr('Warning')"
            },
            "addOptions": {
                "row": 1,
                "column": 0
            }
        }, {
            "class": "gosa.ui.widgets.QCheckBoxWidget",
            "modelPath": "status_Online",
            "properties": {
                "label": "tr('Online')"
            },
            "addOptions": {
                "row": 2,
                "column": 0
            }
        }, {
            "class": "gosa.ui.widgets.QCheckBoxWidget",
            "modelPath": "status_Offline",
            "properties": {
                "label": "tr('Offline')"
            },
            "addOptions": {
                "row": 3,
                "column": 0
            }
        }, {
            "class": "gosa.ui.widgets.QCheckBoxWidget",
            "modelPath": "status_SystemHasActiveUserSessions",
            "properties": {
                "label": "tr('Active user session')"
            },
            "addOptions": {
                "row": 4,
                "column": 0
            }
        }, {
            "class": "gosa.ui.widgets.QCheckBoxWidget",
            "modelPath": "status_SystemActivated",
            "properties": {
                "label": "tr('System activated')"
            },
            "addOptions": {
                "row": 5,
                "column": 0
            }
        }, {
            "class": "gosa.ui.widgets.QCheckBoxWidget",
            "modelPath": "status_SystemLocked",
            "properties": {
                "label": "tr('System locked')"
            },
            "addOptions": {
                "row": 6,
                "column": 0
            }
        }, {
            "class": "gosa.ui.widgets.QCheckBoxWidget",
            "modelPath": "status_UpdateAvailable",
            "properties": {
                "label": "tr('Update available')"
            },
            "addOptions": {
                "row": 0,
                "column": 1
            }
        }, {
            "class": "gosa.ui.widgets.QCheckBoxWidget",
            "modelPath": "status_UpdateInProgress",
            "properties": {
                "label": "tr('Update in progress')"
            },
            "addOptions": {
                "row": 1,
                "column": 1
            }
        }, {
            "class": "gosa.ui.widgets.QCheckBoxWidget",
            "modelPath": "status_InventoryInProgress",
            "properties": {
                "label": "tr('Inventory in progress')"
            },
            "addOptions": {
                "row": 2,
                "column": 1
            }
        }, {
            "class": "gosa.ui.widgets.QCheckBoxWidget",
            "modelPath": "status_ConfigurationInProgress",
            "properties": {
                "label": "tr('Configuration in progress')"
            },
            "addOptions": {
                "row": 3,
                "column": 1
            }
        }, {
            "class": "gosa.ui.widgets.QCheckBoxWidget",
            "modelPath": "status_InstallationInProgress",
            "properties": {
                "label": "tr('Installation in progress')"
            },
            "addOptions": {
                "row": 4,
                "column": 1
            }
        }, {
            "class": "gosa.ui.widgets.QCheckBoxWidget",
            "modelPath": "status_VirtualMachineCreationInProgress",
            "properties": {
                "label": "tr('VM creation in progress')"
            },
            "addOptions": {
                "row": 5,
                "column": 1
            }
        }]
    }]
}
